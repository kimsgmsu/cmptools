#!/usr/bin/env python
"""
combine-band-weight: Combine band.dat and weight.dat generated by Pyband for gnuplot
"""

import os
import numpy as np

class myapp:

    def __init__(self):

        pass

    def run(self, args):

        # banner
        print('==================================')
        print('   COMBINE BAND and WEIGHT DATA   ')
        print('==================================')

        # open band data file
        print('Reading band data from "{}"'.format(args.band_file))
        try:
            fband = open(args.band_file, 'r')
        except IOError:
            util.Error('Failed to open band data file "{}"'.format(args.band_file))

        # Read band data
        kpnt_list = []
        band_list = []
        for line in fband:

            line = line.strip()

            # skip empty line
            if len(line) < 1:
                continue

            # skip comment line
            if line[0:1] == "#":
                continue

            kpnt, band_line = line.split(maxsplit=1)
            kpnt_list.append(kpnt)
            band_values = band_line.split()
            band_list.append(band_values)

        fband.close()

        # open weight data file
        print('Reading weight data from "{}"'.format(args.weight_file))
        try:
            fweight = open(args.weight_file, 'r')
        except IOError:
            util.Error('Failed to open weight data file "{}"'.format(args.weight_file))

        # Read weight data
        weight_list = []
        for line in fweight:

            line = line.strip()

            # skip empty line
            if len(line) < 1:
                continue

            # skip comment line
            if line[0:1] == "#":
                continue

            kpnt, weight_line = line.split(maxsplit=1)
            weight_values = weight_line.split()
            weight_list.append(weight_values)

        fweight.close()

        # Write output files
        print('Writing weighted band data to "{}"'.format(args.outfile))
        try:
            fout = open(args.outfile, 'w')
        except IOError:
            util.Error('Failed to open output file "{}"'.format(args.outfile))

        fout.write('#\n')
        fout.write('# weighted band data from "{}" and "{}"\n'.format(args.band_file, args.weight_file))
        fout.write('#\n')
        nband = len(band_list[0])
        for iband in range(nband):

            for ikpnt in range(len(kpnt_list)):
                kpnt = kpnt_list[ikpnt]
                band = band_list[ikpnt][iband]
                weight = weight_list[ikpnt][iband]
                fout.write('{} {} {}\n'.format(kpnt, band, weight))

            # Two blank lines to deliminate
            fout.write('\n')
            fout.write('\n')
            
        # close files
        fout.close()

if __name__ == "__main__":
    # stand-alone mode
    import argparse
    parser = argparse.ArgumentParser(
        description='combine-band-weight: Combine band.dat and weight.dat generated by Pyband for gnuplot')
    parser.add_argument('band_file', help='band data file')
    parser.add_argument('weight_file', help='weight data file')
    parser.add_argument('outfile', help='output file')

    args = parser.parse_args()

    app = myapp()
    app.run(args)
